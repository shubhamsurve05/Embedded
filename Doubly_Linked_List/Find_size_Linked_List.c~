#include <stdio.h>
#include <stdlib.h>

struct node
{
  int data;
  struct node *prev;
  struct node *next;
};

struct node *head = NULL;
struct node *last = NULL;

struct node *current = NULL;

display the list void
printList ()
{
  struct node *ptr = head;

  printf ("\n[head] <=>");
  //start from the beginning
  while (ptr != NULL)
    {
      printf (" %d <=>", ptr->data);
      ptr = ptr->next;
    }

  printf (" [last]\n");
}

			      //Create Linked List
void
insert (int data)
{
  // Allocate memory for new node;
  struct node *link = (struct node *) malloc (sizeof (struct node));

  link->data = data;
  link->prev = NULL;
  link->next = NULL;

  // If head is empty, create new list
  if (head == NULL)
    {
      head = link;
      return;
    }

  current = head;

  // move to the end of the list
  while (current->next != NULL)
    current = current->next;

  // Insert link at the end of the list
  current->next = link;
  last = link;
  link->prev = current;
}

void
sizeof_list ()
{
  int size = 0;
  struct node *link;

  if (head == NULL)
    {
      printf ("\n Size of list is %d\n", size);
      return;
    }

  link = head;
  while (link != NULL)
    {
      link = link->next;
      size++;
    }

  printf ("\n Size of list is %d\n", size);
}

int
main ()
{
  insert (10);
  insert (20);
  insert (30);
  insert (1);
  insert (40);
  insert (56);

  printList ();
  sizeof_list ();

  return 0;
}
